@inherits System.Web.Mvc.WebViewPage<GoogleMaps.PropertyEditor.GoogleMapsModel>
@using System.Web.Helpers;
@using System.Web.Mvc;
@using System.Web.Mvc.Ajax;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using System.Web.WebPages;
@using Microsoft.Web.Mvc;
@using ClientDependency.Core;
@using ClientDependency.Core.Mvc;
@using GoogleMaps.PropertyEditor
@using Umbraco.Cms.Web;
@using Umbraco.Cms.Web.Editors;

@{
    var uniqueID            = Guid.NewGuid().ToString();
    var propertyEditorID    = "googlePropertyEditor-" + uniqueID;
    var mapID               = "googleMap-" + uniqueID;
}

<!-- Google Maps API -->
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=@(Model.PreValueModel.apiKey)&sensor=false"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $($("#tabs").umbracoTabsApi()).bind("tabChanged.umbracoTabs", function (e, args) {
            //Call the plugin
            $('#@propertyEditorID').umbracoGoogleMap({
                googleMap: '#@mapID'
            });
        });

        //Call the plugin
        $('#@propertyEditorID').umbracoGoogleMap({
            googleMap: '#@mapID'
        });
    });
</script>

@{ 
Html
.RequiresJsResource(typeof(GoogleMapsEditor), "GoogleMaps.PropertyEditor.Resources.PropertyEditor.js")
.RequiresCssResource(typeof(GoogleMapsEditor), "GoogleMaps.PropertyEditor.Resources.GoogleMap.css");
}

<div id="@propertyEditorID">
    <div id="search">
        @Html.TextBoxFor(x => Model.Postcode, new { @class = "googlePostcode", @placeholder = "Search for a location" })
        <input type="submit" class="googleSearch" value="Find" />
    </div>

    <div class="value">
        @Html.LabelFor(x => Model.Lat)
        @Html.TextBoxFor(x => Model.Lat, new { @class = "googleLat", @readonly = "readonly" })
    </div>

    <div class="value">
    @Html.LabelFor(x => Model.Long)
    @Html.TextBoxFor(x => Model.Long, new { @class = "googleLong", @readonly = "readonly" })
    </div>

    <div class="value">
        @Html.LabelFor(x => Model.ZoomLevel)
        @Html.TextBoxFor(x => Model.ZoomLevel, new { @class = "googleZoom", @readonly = "readonly" })
    </div>

    <div id="@mapID" class="bingMap" style="width:@(Model.PreValueModel.initWidth)px; height:@(Model.PreValueModel.initHeight)px; position:relative;">
        <p>Loading Please Wait...</p>
    </div>
</div>